{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AfrahAlBalushi\\\\OneDrive - Rihal\\\\Desktop\\\\quote-generator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Quote from './components/Quote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [quoteData, setQuoteData] = useState(null);\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n  const fetchQuote = async () => {\n    try {\n      const response = await fetch('https://api.quotable.io/random');\n      const data = await response.json();\n      setQuoteData(data);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Quote Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), quoteData && /*#__PURE__*/_jsxDEV(Quote, {\n      quote: quoteData.content,\n      author: quoteData.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuote,\n      children: \"Get Random Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9O6dbAeBUVALj+KPtNZLZqWf0a0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Quote","jsxDEV","_jsxDEV","App","_s","quoteData","setQuoteData","fetchQuote","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","quote","content","author","onClick","_c","$RefreshReg$"],"sources":["C:/Users/AfrahAlBalushi/OneDrive - Rihal/Desktop/quote-generator/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Quote from './components/Quote';\n\nconst App = () => {\n  const [quoteData, setQuoteData] = useState(null);\n\n  useEffect(() => {\n    fetchQuote();\n  }, []);\n\n  const fetchQuote = async () => {\n    try {\n      const response = await fetch('https://api.quotable.io/random');\n      const data = await response.json();\n      setQuoteData(data);\n    } catch (error) {\n      console.error('Error fetching quote:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Random Quote Generator</h1>\n      {quoteData && <Quote quote={quoteData.content} author={quoteData.author} />}\n      <button onClick={fetchQuote}>Get Random Quote</button>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,YAAY,CAACI,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9Bb,SAAS,iBAAIH,OAAA,CAACF,KAAK;MAACmB,KAAK,EAAEd,SAAS,CAACe,OAAQ;MAACC,MAAM,EAAEhB,SAAS,CAACgB;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3EhB,OAAA;MAAQoB,OAAO,EAAEf,UAAW;MAAAO,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA0BT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}